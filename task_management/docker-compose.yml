version: "3.8"

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - kafka
    restart: always

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: task_management_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    restart: always

  redis:
    image: redis:latest
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MAX_REQUEST_SIZE: 200000000
      KAFKA_MESSAGE_MAX_BYTES: 200000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 200000000
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    restart: always

  celery:
    build: .
    command: sh -c "sleep 10 && celery -A task_management worker --loglevel=info"
    depends_on:
      - kafka
    restart: always
